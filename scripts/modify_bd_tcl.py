##############################################################
# This script makes some additions to the TCL scripts
# generated by the "write_bd_tcl" function
##############################################################

#Necessary for several functions used through this script
import os

#Necessary for access to argv
import sys

#BD file path
bd_file = sys.argv[1]

#BD name
bd_name = sys.argv[2]

#BD IS_ENABLED flag
enabled = sys.argv[3]
	
#We open a temporary file to store the new information in it
with open("tmp.tcl","w+") as tmp:
	
	#Opens up the tcl script
	with open(bd_file, "r+") as f:
		
		#Start from the beginning of the file
		f.seek(0)
		
		#Going through the file one line at the time
		for line in f:
		
			#Strips the line of the line changing function -> makes it easier to compare strings
			line = line.rstrip("\n")	

			#Add BD wrapper generation 
			if line.lstrip().startswith("save_bd_design") :					
				tmp.write(line+"\n")
				tmp.write("  close_bd_design $design_name\n\n")
				#tmp.write("  # Generate BD wrapper\n")
				#tmp.write("  make_wrapper -files [get_files ${design_name}.bd] -top\n\n")
				continue

			#Set BD properties
			if line.lstrip().startswith("create_root_design") :
				tmp.write(line+"\n")
				tmp.write("set_property IS_ENABLED \""+enabled+"\" [get_files "+bd_name+".bd]\n")
				tmp.write("set_property SYNTH_CHECKPOINT_MODE \"Hierarchical\" [get_files "+bd_name+".bd]\n")
				continue

			#Copy line by default
			tmp.write(line+"\n")	
			

	#Starting at the beginning of the temp file
	tmp.seek(0)	

	#Opening the original file to write in it
	with open(bd_file,"w") as f:
	
		#Starting at the beginning of the original file
		f.seek(0)
		for line in tmp :
			#Writing each line 
			f.write(line)					

#Removing the temporary file
os.remove("tmp.tcl")
